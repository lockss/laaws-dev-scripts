#!/bin/sh

stdout="rpt-test-out"
stderr="rpt-test-err"

usage() {
 echo "Usage: $0 [-q] [-Dprop=val] <rpt-count> <class-name>"
 echo "Runs <class-name> in junit <rpt-count> times,"
 echo " sending stdout and stderr to $stdout and $stderr."
 echo "If <class-name> is \"all\", runs all the tests in the current project"
 echo "-q  suppresses printing a dot for each iteration."
 echo "-nobuild  skip code generation and compilation steps."
 echo "Other -flags are passed in to mvn unmodified."
 echo "Must be run from project base dir."
 exit 1
}

if [ "$#" = "0" ]; then
  usage;
fi

showdots=1
skipargs=

while true ; do
  case "$1" in
    "-q" )
      showdots=0
      shift; continue;;
    "-nobuild" )
      skipargs="-DskipSwagger -DskipAntlr -DskipInfo -DskipCompileMain -DskipCompileTests"
      shift; continue;;
    "-1.8" )
      if [ -z "$JAVA_18_HOME" ] ; then
	echo "-1.8 option requires JAVA_18_HOME to point to 1.8 install dir"
	exit 1;
      fi
      JAVA_HOME="${JAVA_18_HOME}"
      export JAVA_HOME
      PATH="$JAVA_HOME/bin:$PATH"
      export PATH
      echo JAVA_HOME="$JAVA_HOME"
      shift; continue;;
    -* )
      mvn_args="$mvn_args $1"
      shift; continue;;
  esac
  break;
done

[ "$#" -ne "2" ] && usage

PROJECT_DIR=.

rpt=$1
class=$2
shift
shift

testarg=
[ $class != "all" ] && testarg="-Dtest=$class"

failcnt=0

msg="Starting $rpt iterations at `date`"
echo "$msg" >> $stderr
echo "$msg" >> $stdout

ix=1
while [ $ix -le $rpt ]; do
  echo "** iter $ix" >> $stderr
  echo "** iter $ix" >> $stdout

  if ! mvn -B ${mvn_args} test $testarg $skipargs >>$stdout 2>>$stderr; then
    failcnt=$((failcnt + 1))
    [ $showdots = 1 ] && echo -n F
  else
    [ $showdots = 1 ] && echo -n .
  fi
  ix=$(($ix + 1))
done
echo
echo $failcnt failures
